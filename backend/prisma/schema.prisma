// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ユーザー情報
model User {
  id         String   @id @default(cuid())
  cognitoSub String   @unique
  email      String   @unique
  username   String
  teamId     String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  team          Team?              @relation(fields: [teamId], references: [id], onDelete: SetNull)
  choreStresses UserChoreStress[]
  choreLogs     ChoreLog[]

  @@index([teamId])
  @@index([cognitoSub])
  @@map("users")
}

// チーム情報
model Team {
  id         String   @id @default(cuid())
  name       String
  inviteCode String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  users  User[]
  chores Chore[]

  @@index([inviteCode])
  @@map("teams")
}

// 家事マスタ
model Chore {
  id        String   @id @default(cuid())
  name      String
  teamId    String
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  team          Team              @relation(fields: [teamId], references: [id], onDelete: Cascade)
  choreStresses UserChoreStress[]
  choreLogs     ChoreLog[]

  @@index([teamId])
  @@map("chores")
}

// ユーザー別家事ストレス度
model UserChoreStress {
  id          String   @id @default(cuid())
  userId      String
  choreId     String
  stressLevel Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  chore Chore @relation(fields: [choreId], references: [id], onDelete: Cascade)

  @@unique([userId, choreId])
  @@index([userId])
  @@index([choreId])
  @@map("user_chore_stresses")
}

// 家事実行記録
model ChoreLog {
  id              String   @id @default(cuid())
  userId          String
  choreId         String
  durationMinutes Int
  points          Int
  completedAt     DateTime @default(now())
  createdAt       DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  chore Chore @relation(fields: [choreId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([choreId])
  @@index([completedAt])
  @@map("chore_logs")
}
